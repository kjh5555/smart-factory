Vibe Front Rule

(Ts, react,ShardCn,Lucide React)


Front

- TypeScript
- React
- ShardCn
- Lucide React
- Recoil
- react-query
- zod
- axios
- react-hook-form
- react-router-dom
- react-icons
- prisma
- jest


### ShardCN Components

-  모든 UI 컴포넌트는 ShardCN을 사용합니다.
-  컴포넌트 사용 전 설치여부를 확인해야 합니다.: `/components/ui/` 디렉토리 체크
-  컴포넌트 설치 명령어를 사용해야 합니다. : `npx shadcn@latest add [component]`
    -  주의: `npx shadcn@latest add` 명령어는 deprecated. 반드시 `npx shadcn@latest add` 사용해야합니다.


### Icons

- 모든 아이콘은 Lucide React를 사용합니다.
- 아이콘 임포트 방법: `import { IconName } from "lucide-react"`
- 예시: `import { Search, Menu } from "lucide-react"`

### Component Structure

- 컴포넌트는 `/components` 디렉토리에 위치합니다.
- UI 컴포넌트는 `/components/ui` 디렉토리에 위치합니다.
- 페이지별 컴포넌트는 `/app` 디렉토리 내 해당 라우트에 위치합니다.

### axios
- 모든 API통신은 axios를 사용합니다.
- react-query를 사용합니다.
- 모든 요청은 비동기 요청으로 처리합니다.

### jest
- 모든 테스트는 jest를 사용합니다.
- 페이지를 만들거나 함수가 추가 될 때 jest 테스트 코드를 작성해야합니다.

### prisma
- MySQL 데이터베이스를 사용합니다.
- 모든 데이터베이스 쿼리는 prisma를 사용합니다.
- 모든 데이터베이스 쿼리는 비동기 쿼리로 처리합니다.


### Best Practices

- TypeScript 타입은 반드시 정의해야합니다.
- 컴포넌트는 재사용 가능하도록 설계해야합니다.
- 터미널에서 라이브러리 설치 시 현재 경로를 확인해야합니다.
- 수정된 부분외에 다른 코드가 삭제되지 않아야합니다.
- 컴포넌트 사용 시 주석을 달아야합니다.
- 주석을 자세하게 달아야합니다
- 모든 라이브러리는 사용 전 설치여부를 확인합니다.

